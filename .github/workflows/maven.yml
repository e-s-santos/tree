# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
    paths-ignore: 
      - '.github/workflows/*'
  pull_request:
    branches: [ "master" ]
    type: 
      - opened
      - closed
  workflow_dispatch:
    paths-ignore: 
      - '.github/workflows/*'
    inputs: 
      loglevel:
        description: Log Level 
        required: false 
        type: text 
      idade: 
        description: idade 
        required: false 
        type: integer 
      choice: 
        description: escolha 
        required: false 
        type: choice 
        options: 
          - continue
          - pause 
          - break
jobs:
  echo:
    runs-on: ubuntu-latest
    steps:
    - name: Etapa Inicial
      run: | 
        echo "Testando o github"
  build:
    needs: echo
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: upload Art
      uses: actions/upload-artifact@v3
      with: 
        name: java
        paths: | 
          "*.jar"

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
  #dockerImage:
  #  needs: build 
  #  runs-on: ubuntu-latest 
  #  steps: 
  #    - name: dockerBuild 
  #      run: | 
  #        echo "Iniciando o docker build" 
  #        docker build . -t tree
  #    - name: push 
  #      run: | 
  #        docker login -u {{ $usu√°rio }} -p {{ $senha }}
  #        docker push
